. describe needed/ and garbage/

-- new release

tests:
* whether ckmame can be run (incomplete runtime library path)
* dumpgame
* mkmamedb tests
  * XML parsing
  * /prog from command line
  * /prog from file
  * broken input

- [feature] integrity check: remember which disks have already been checked
  (only check once each)
- [feature] dumpgame: dump samples
- [feature] add option to remove files from -e dirs that already are in ROM set
- [feature] "fix" superfluous archives by moving unknown files to garbage

cmcheck features:
- greppable output
- db (dat file?) with roms we have elsewhere:
  - if correct on dvd, write "correct (on dvd)"
  - on dvd, only nameerrors: output optional
  - garbage, unused on dvd: output optional
  - use file from dvd: "is on dvd..." (-> game not "correct")
  * option to fix minor errors (name error, garbage, unused) from dvd to hd
  * option to delete files on disk that are not more correct than on dvd
  * option to provide mapping from db to path (for dvd dbs)
  + check dvd status first, if ok "correct" (garbage, unused)
  + use any files from roms/game.zip
    if unsplit ok: "correct"
    if split ok
      get files from dvd if possible
      else keep looking
  + use any files from superfluous/extra dirs
- create dat file

other features:
- read games to check from file or stdin
- parse_xml: set line numbers
- parse: add state checking to parse-cm.c
- parse: check for duplicate attributes
- tool for generating update sets from ckmame output and existing romset
- tool for generating update sets from two databases and existing romset
- find out why runtest is slow
- add support for native db3/db4
- add option to check integrity for roms only (not for disks, they take forever)
- mkmamedb: handle disk without md5
- mkmamedb: handle rom without crc
- mkmamedb: no error message for missing newline in last line
- mkmamedb: warn about sets without parent that use "merge"
- complete raine support (multiple archive names: archive ( name
  "64th_street" name "64street" ))
- handle two roms in one game with same size/hashes but different name
- handle (incorrect db) with two roms of the same name in one game
- option to check if no good dumps are needed elsewhere

code cleanups:
- refactor hashes_set and hashes_verify
- remove unneeded includes
- make parse_cm table driven
- split util*, funcs.h
- use return value of w_game
- fix all XXXs
