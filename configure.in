AC_INIT(ckmame.c)
AM_INIT_AUTOMAKE(ckmame,0.1)
AM_CONFIG_HEADER(config.h)

# We want these before the checks, so the checks can modify their values.
test -z "$CFLAGS" && CFLAGS='-Wall -g' auto_cflags=1


AC_PROG_CC

AC_ARG_WITH(zlib,
    [  --with-zlib=PREFIX  specify prefix for ZLIB library],,
    with_zlib=yes)

if test "$with_zlib" != "yes"
then
    if test -f "$with_zlib"/zlib.h
    then
	# PREFIX is to uninstalled version in distribution directory
	CFLAGS="$CFLAGS -I$with_zlib"
	LDFLAGS="$LDFLAGS -L$with_zlib"
    else if test -f "$with_zlib"/include/zlib.h
    then
	# PREFIX is installation prefix
	CFLAGS="$CFLAGS -I$with_zlib/include"
	LDFLAGS="$LDFLAGS -L$with_zlib/lib"
    fi
    fi
fi

AC_CHECK_LIB(z, main)
AC_CACHE_CHECK(new ZLIB version, id_cv_lib_zlib_ok, 
	AC_TRY_COMPILE([#include <zlib.h>], 
		[extern ZEXPORT unzOpen OF((const char *path));],
		id_cv_lib_zlib_ok=yes, id_cv_lib_zlib_ok=no))
if test "$id_cv_lib_zlib_ok" = "no"
then
    AC_ERROR([ZLIB version too old, please install at least v1.1.2])
fi
    
AC_REPLACE_FUNCS(fnmatch)
AC_CHECK_FUNCS(getopt_long, , [LIBOBJS="$LIBOBJS getopt1.o getopt.o"])
AC_SUBST(LIBOBJS)

AC_LINK_FILES(db-db.h db-db.c, dbl.h dbl.c)

AC_OUTPUT(Makefile)
