#define QUERY_VERSION	"pragma user_version"

/* memdb */

#define MEM_INSERT_FILE     "insert into file (game_id, file_type, file_idx, file_sh, location, size, crc, md5, sha1) values (?, ?, ?, ?, ?, ?, ?, ?, ?)"
#define MEM_QUERY_FILE      "select game_id, file_idx, file_sh, location from file f where file_type = ? @SIZE@ @HASH@ order by location"

#define MEM_INSERT_PTR      "insert into ptr_cache (name, file_type, pointer) values (?, ?, ?)"
#define MEM_QUERY_PTR       "select pointer from ptr_cache where name = ? and file_type = ?"
#define MEM_QUERY_PTR_ID    "select pointer from ptr_cache where game_id = ?"
#define MEM_UPDATE_FILE     "update file set crc = ?, md5 = ?, sha1 = ? where game_id = ? and file_type = ? and file_idx = ? and file_sh = ?"
#define MEM_DELETE_FILE     "delete from file where game_id = ? and file_type = ? and file_idx = ?"
#define MEM_DEC_FILE_IDX    "update file set idx=idx-1 where game_id = ? and file_type = ? and file_idx > ?"


/* romdb */

#define QUERY_DAT           "select name, description, version from dat where dat_idx >= 0 order by dat_idx"
#define QUERY_FILE_FBH      "select g.name, f.file_idx from game g, file f where f.game_id = g.game_id and f.file_type = ? and f.status <> ? @HASH@"
#define QUERY_HAS_DISKS     "select file_idx from file where file_type = 2 limit 1"
#define QUERY_RULE	    "select rule_idx, start_offset, end_offset, operation from rule order by rule_idx"
#define QUERY_TEST	    "select type, offset, size, mask, value, result from test where rule_idx = ? order by test_idx"
#define QUERY_LIST_DISK    "select distinct name from file where file_type = 2 order by name"
#define QUERY_LIST_GAME    "select name from game order by name"
#define QUERY_LIST_SAMPLE  "select distinct g.name from game g, file f where g.game_id=f.game_id and f.file_type = 1 order by g.name"

/*#define DELETE_DAT	    "delete from dat where dat_idx >= 0"*/
#define DELETE_FILE	    "delete from file where game_id = ?"
#define DELETE_GAME	    "delete from game where game_id = ?"
#define DELETE_PARENT	    "delete from parent where game_id = ?"
#define DELETE_PARENT_FT    "delete from parent where game_id = ? and file_type = ?"
#define INSERT_DAT_DETECTOR "insert into dat (dat_idx, name, author, version) values (-1, ?, ?, ?)"
#define INSERT_DAT	    "insert into dat (dat_idx, name, description, version) values (?, ?, ?, ?)"
#define INSERT_FILE	    "insert into file (game_id, file_type, file_idx, name, merge, status, location, size, crc, md5, sha1) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
#define INSERT_GAME	    "insert into game (name, description, dat_idx) values (?, ?, ?)"
#define INSERT_PARENT	    "insert into parent (game_id, file_type, parent) values (?, ?, ?)"
#define INSERT_RULE	    "insert into rule (rule_idx, start_offset, end_offset, operation) values (?, ?, ?, ?)"
#define INSERT_TEST	    "insert into test (rule_idx, test_idx, type, offset, size, mask, value, result) values (?, ?, ?, ?, ?, ?, ?, ?)"
#define QUERY_CLONES	    "select g.name from game g, parent p where g.game_id = p.game_id and p.parent = ? and file_type = ?"
#define QUERY_DAT_DETECTOR  "select name, author, version from dat where dat_idx = -1"
#define QUERY_FILE	    "select name, merge, status, location, size, crc, md5, sha1 from file where game_id = ? and file_type = ? order by file_idx"
#define QUERY_GAME	    "select game_id, description, dat_idx from game where name = ?"
#define QUERY_GAME_ID	    "select game_id from game where name = ?"
#define QUERY_GPARENT	    "select parent from parent p, game g where g.game_id = p.game_id and g.name = ? and p.file_type = ?"
#define QUERY_HASH_TYPE_CRC	    "select name from file where file_type = ? and crc not null limit 1"
#define QUERY_HASH_TYPE_MD5	    "select name from file where file_type = ? and md5 not null limit 1"
#define QUERY_HASH_TYPE_SHA1	    "select name from file where file_type = ? and sha1 not null limit 1"
#define QUERY_PARENT	    "select parent from parent where game_id = ? and file_type = ?"
#define QUERY_STATS_FILES   "select file_type, count(name), sum(size) from file group by file_type order by file_type"
#define QUERY_STATS_GAMES   "select count(name) from game"
#define UPDATE_FILE	    "update file set location = ? where game_id = ? and file_type = ? and file_idx = ?"
#define UPDATE_PARENT	    "update parent set parent = ? where game_id = ? and file_type = ?"

/* cachedb */
#define DIR_INSERT_ARCHIVE  "insert into archive (name, mtime, size) values (?, ?, ?)"
#define DIR_INSERT_ARCHIVE_ID	    "insert into archive (name, archive_id, mtime, size) values (?, ?, ?, ?)"
#define DIR_LIST_ARCHIVES    "select name from archive"
#define DIR_QUERY_ARCHIVE_LAST_CHANGE   "select mtime, size from archive where archive_id = ?"
#define DIR_QUERY_ARCHIVE_ID   "select archive_id from archive where name = ?"
#define DIR_DELETE_ARCHIVE  "delete from archive where archive_id = ?"
#define DIR_COUNT_ARCHIVES  "select count(archive_id) from archive"

#define DIR_INSERT_FILE     "insert into file (archive_id, file_idx, name, mtime, status, size, crc, md5, sha1) values (?, ?, ?, ?, ?, ?, ?, ?, ?)"
#define DIR_QUERY_FILE      "select name, mtime, status, size, crc, md5, sha1 from file where archive_id = ? order by file_idx"
#define DIR_DELETE_FILE     "delete from file where archive_id = ?"
